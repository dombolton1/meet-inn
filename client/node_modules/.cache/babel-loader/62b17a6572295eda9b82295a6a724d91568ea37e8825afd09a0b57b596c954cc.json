{"ast":null,"code":"var _jsxFileName = \"/home/dbolton/Codeworks/solo-project/meet-inn/client/src/components/Map/Map.jsx\",\n  _s = $RefreshSig$();\nimport GoogleMapReact from 'google-map-react';\nimport { Typography, Paper } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport useStyles from './styles';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Map(_ref) {\n  _s();\n  var _places$data$results;\n  let {\n    centre,\n    setCentre,\n    places\n  } = _ref;\n  const classes = useStyles();\n  const defaultProps = {\n    centre: {\n      lat: 51.575802328718375,\n      lng: 0.18283138525078574\n    },\n    zoom: 12\n  };\n  // console.log(places.data.results)\n  console.log(places.data.results[0].geometry.location);\n  //TODO: Add key to ENV file\n\n  // <GoogleMapReact\n  //   bootstrapURLKeys={{ key: 'AIzaSyD2puGPtJBCXGtB1QgL7Fhh_VMALg_InmY' }}\n  //   defaultCenter={defaultProps.centre}\n  //   defaultZoom={defaultProps.zoom}\n  //   center={defaultProps.centre}\n  //   onChange={(event) => {\n  //     // console.log(event);\n\n  //   }}\n  // >\n\n  //   {/* <Typography lat={0} lng={0}>\n  //     Test\n  //   </Typography> */}\n\n  // </GoogleMapReact>\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: (_places$data$results = places.data.results) === null || _places$data$results === void 0 ? void 0 : _places$data$results.map((place, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"place\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this))\n  }, void 0, false)\n\n  // <h1 className={classes.container}>\n  //   Hello, Map!\n  // </h1>\n  ;\n}\n_s(Map, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["GoogleMapReact","Typography","Paper","Card","CardHeader","CardContent","useStyles","Map","centre","setCentre","places","classes","defaultProps","lat","lng","zoom","console","log","data","results","geometry","location","map","place","i","container"],"sources":["/home/dbolton/Codeworks/solo-project/meet-inn/client/src/components/Map/Map.jsx"],"sourcesContent":["import GoogleMapReact from 'google-map-react';\nimport { Typography, Paper } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\n\n\nimport useStyles from './styles'\n\n\nfunction Map({ centre, setCentre, places }) {\n  const classes = useStyles();\n\n  const defaultProps = {\n    centre: {\n      lat: 51.575802328718375,\n      lng: 0.18283138525078574\n    },\n    zoom: 12\n  }\n  // console.log(places.data.results)\n  console.log(places.data.results[0].geometry.location)\n  //TODO: Add key to ENV file\n\n      // <GoogleMapReact\n      //   bootstrapURLKeys={{ key: 'AIzaSyD2puGPtJBCXGtB1QgL7Fhh_VMALg_InmY' }}\n      //   defaultCenter={defaultProps.centre}\n      //   defaultZoom={defaultProps.zoom}\n      //   center={defaultProps.centre}\n      //   onChange={(event) => {\n      //     // console.log(event);\n\n      //   }}\n      // >\n\n\n      //   {/* <Typography lat={0} lng={0}>\n      //     Test\n      //   </Typography> */}\n\n      // </GoogleMapReact>\n  return (\n    <>\n\n    {places.data.results?.map((place, i) =>\n    <div className={classes.container}>\n        <Typography>\n          place\n        </Typography>\n    </div>\n      )}\n    </>\n\n      // <h1 className={classes.container}>\n      //   Hello, Map!\n      // </h1>\n  )\n}\n\nexport default Map;"],"mappings":";;AAAA,OAAOA,cAAc,MAAM,kBAAkB;AAC7C,SAASC,UAAU,EAAEC,KAAK,QAAQ,mBAAmB;AACrD,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,UAAU,MAAM,8BAA8B;AACrD,OAAOC,WAAW,MAAM,+BAA+B;AAGvD,OAAOC,SAAS,MAAM,UAAU;AAAA;AAAA;AAGhC,SAASC,GAAG,OAAgC;EAAA;EAAA;EAAA,IAA/B;IAAEC,MAAM;IAAEC,SAAS;IAAEC;EAAO,CAAC;EACxC,MAAMC,OAAO,GAAGL,SAAS,EAAE;EAE3B,MAAMM,YAAY,GAAG;IACnBJ,MAAM,EAAE;MACNK,GAAG,EAAE,kBAAkB;MACvBC,GAAG,EAAE;IACP,CAAC;IACDC,IAAI,EAAE;EACR,CAAC;EACD;EACAC,OAAO,CAACC,GAAG,CAACP,MAAM,CAACQ,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,QAAQ,CAACC,QAAQ,CAAC;EACrD;;EAEI;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAGA;EACA;EACA;;EAEA;EACJ,oBACE;IAAA,kCAECX,MAAM,CAACQ,IAAI,CAACC,OAAO,yDAAnB,qBAAqBG,GAAG,CAAC,CAACC,KAAK,EAAEC,CAAC,kBACnC;MAAK,SAAS,EAAEb,OAAO,CAACc,SAAU;MAAA,uBAC9B,QAAC,UAAU;QAAA,UAAC;MAEZ;QAAA;QAAA;QAAA;MAAA;IAAa;MAAA;MAAA;MAAA;IAAA,QACX;EACH;;EAGD;EACA;EACA;EAAA;AAEN;AAAC,GA/CQlB,GAAG;EAAA,QACMD,SAAS;AAAA;AAAA,KADlBC,GAAG;AAiDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
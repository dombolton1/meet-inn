{"ast":null,"code":"var _jsxFileName = \"/home/dbolton/Codeworks/solo-project/meet-inn/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Grid, Toolbar, AppBar, Typography } from '@material-ui/core';\nimport Banner from './components/Banner/Banner';\nimport Footer from './components/Footer/Footer';\nimport Places from './components/Places/Places';\nimport Map from './components/Map/Map';\nimport { getPlaceByRadius } from './services/api';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [centre, setCentre] = useState({});\n  const [places, setPlaces] = useState([]);\n  const [list, setList] = useState([]);\n  function addToList(item) {\n    if (!list.some(e => e.name === item.name)) setList([...list, item]);\n  }\n  function isOnList(item) {\n    return list.some(e => e.name === item.name);\n  }\n  function removeFromList(item) {\n    let index = list.findIndex(listItem => listItem.name === item.name);\n    console.log(index);\n    setList(list.splice(index, 1));\n  }\n  useEffect(() => {\n    getPlaceByRadius(`${centre.lat},${centre.lng}`).then(data => {\n      // console.log(data);\n      setPlaces(data.data.results);\n    });\n  }, [centre]);\n\n  //list will first try to setList[data from db]\n  //for now, just use locally\n\n  useEffect(() => {\n    setList(list);\n  }, [list]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      style: {\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Map, {\n          centre: centre,\n          setCentre: setCentre,\n          places: places\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Places, {\n          places: places,\n          list: list,\n          addToList: addToList,\n          isOnList: isOnList,\n          removeFromList: removeFromList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      list: list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"maGyLdKWKE30l4MqQVli3aqMcoM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Grid","Toolbar","AppBar","Typography","Banner","Footer","Places","Map","getPlaceByRadius","App","centre","setCentre","places","setPlaces","list","setList","addToList","item","some","e","name","isOnList","removeFromList","index","findIndex","listItem","console","log","splice","lat","lng","then","data","results","width"],"sources":["/home/dbolton/Codeworks/solo-project/meet-inn/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { Grid, Toolbar, AppBar, Typography } from '@material-ui/core';\n\nimport Banner from './components/Banner/Banner';\nimport Footer from './components/Footer/Footer';\nimport Places from './components/Places/Places';\nimport Map from './components/Map/Map';\n\nimport { getPlaceByRadius } from './services/api'\n\nfunction App() {\n  const [centre, setCentre] = useState({});\n  const [places, setPlaces] = useState([]);\n  const [list, setList] = useState([]);\n\n  function addToList (item) {\n    if (!list.some(e => e.name === item.name)) setList([...list, item]);\n  }\n\n  function isOnList (item) {\n    return (list.some(e => e.name === item.name))\n  }\n\n  function removeFromList (item) {\n    let index = list.findIndex((listItem) => listItem.name === item.name);\n    console.log(index)\n    setList(list.splice(index, 1));\n  }\n\n\n  useEffect((() => {\n    getPlaceByRadius(`${centre.lat},${centre.lng}`)\n    .then((data) => {\n      // console.log(data);\n      setPlaces(data.data.results);\n    })\n  }), [centre]);\n\n  //list will first try to setList[data from db]\n  //for now, just use locally\n\n  useEffect((() => {\n    setList(list)\n  }), [list])\n\n\n  return (\n    <>\n      <Banner />\n      <Grid container spacing={2} style={{ width: '100%' }}>\n        <Grid item xs={12} md={8}>\n          <Map\n            centre={centre}\n            setCentre={setCentre}\n            places={places}\n          />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <Places\n            places={places}\n            list={list}\n            addToList={addToList}\n            isOnList={isOnList}\n            removeFromList={removeFromList}\n          />\n        </Grid>\n      </Grid>\n      <Footer\n        list={list}\n      />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
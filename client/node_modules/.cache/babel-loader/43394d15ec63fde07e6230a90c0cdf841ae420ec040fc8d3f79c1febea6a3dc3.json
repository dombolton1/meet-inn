{"ast":null,"code":"var _jsxFileName = \"/home/dbolton/Codeworks/solo-project/meet-inn/client/src/components/Map/Map.jsx\",\n  _s = $RefreshSig$();\nimport GoogleMapReact from 'google-map-react';\nimport { Typography, Paper, Button, Modal, Box, IconButton } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport LocalBarIcon from '@material-ui/icons/LocalBar';\nimport { useState } from 'react';\nimport useStyles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Map(_ref) {\n  _s();\n  var _selectedPlace$photos;\n  let {\n    centre,\n    setCentre,\n    places\n  } = _ref;\n  const classes = useStyles();\n  const defaultProps = {\n    centre: {\n      lat: 51.575802328718375,\n      lng: 0.18283138525078574\n    },\n    zoom: 15\n  };\n  // console.log(places[0].photos[0].photo_reference)\n  // console.log(places.data.results[0].geometry.location)\n  //TODO: Add key to ENV file\n\n  const [open, setOpen] = useState(false);\n  const [selectedPlace, setSelectedPlace] = useState(places[0]);\n  const handleOpen = place => {\n    setSelectedPlace(place);\n    setOpen(true);\n  };\n  const handleClose = () => setOpen(false);\n  const style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: 'AIzaSyD2puGPtJBCXGtB1QgL7Fhh_VMALg_InmY'\n      },\n      defaultCenter: defaultProps.centre,\n      defaultZoom: defaultProps.zoom,\n      center: defaultProps.centre,\n      onChange: event => {\n        // console.log(event.center);\n        setCentre(event.center);\n      },\n      children: [places === null || places === void 0 ? void 0 : places.map((place, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        lat: place.geometry.location.lat,\n        lng: place.geometry.location.lng,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          style: {\n            color: 'black',\n            border: 'dashed'\n          },\n          onClick: () => handleOpen(place),\n          children: /*#__PURE__*/_jsxDEV(LocalBarIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Modal, {\n        open: open,\n        onClose: handleClose,\n        \"aria-labelledby\": \"modal-modal-title\",\n        \"aria-describedby\": \"modal-modal-description\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: style,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: style,\n            children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n              style: {\n                height: '60px'\n              },\n              component: \"img\",\n              height: \"140\",\n              image: `https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photo_reference=${selectedPlace === null || selectedPlace === void 0 ? void 0 : (_selectedPlace$photos = selectedPlace.photos[0]) === null || _selectedPlace$photos === void 0 ? void 0 : _selectedPlace$photos.photo_reference}&key=AIzaSyDSIQ1d7mi0UkmqcOVJICPOh43Oa-i1byc`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              style: {\n                height: '20px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                component: \"div\",\n                children: selectedPlace === null || selectedPlace === void 0 ? void 0 : selectedPlace.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"qMi4GUcMtePAp51wV1tJ81IRWzA=\", false, function () {\n  return [useStyles];\n});\n_c = Map;\nexport default Map;\n{/*\n        {places?.map((place, i) =>\n            <Card lat={place.geometry.location.lat} lng={place.geometry.location.lng} style={{display: 'inline-block', width:'100px'}} sx={{ maxWidth: 40 }}>\n            <CardMedia\n              style={{ height: '60px'}}\n              component=\"img\"\n              height=\"140\"\n              image={`https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photo_reference=${place.photos[0].photo_reference}&key=AIzaSyDSIQ1d7mi0UkmqcOVJICPOh43Oa-i1byc`}\n            />\n            <CardContent\n              style={{ height: '20px'}}\n            >\n              <Typography variant=\"subtitle2\" component=\"div\">\n                {place.name}\n              </Typography>\n            </CardContent>\n           </Card>\n        )} */}\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["GoogleMapReact","Typography","Paper","Button","Modal","Box","IconButton","Card","CardHeader","CardContent","CardMedia","LocalBarIcon","useState","useStyles","Map","centre","setCentre","places","classes","defaultProps","lat","lng","zoom","open","setOpen","selectedPlace","setSelectedPlace","handleOpen","place","handleClose","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","container","key","event","center","map","i","geometry","location","color","height","photos","photo_reference","name"],"sources":["/home/dbolton/Codeworks/solo-project/meet-inn/client/src/components/Map/Map.jsx"],"sourcesContent":["import GoogleMapReact from 'google-map-react';\nimport { Typography, Paper, Button, Modal, Box, IconButton } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport LocalBarIcon from '@material-ui/icons/LocalBar';\n\n\n\nimport { useState } from 'react';\n\n\nimport useStyles from './styles'\n\n\nfunction Map({ centre, setCentre, places }) {\n  const classes = useStyles();\n\n  const defaultProps = {\n    centre: {\n      lat: 51.575802328718375,\n      lng: 0.18283138525078574\n    },\n    zoom: 15\n  }\n  // console.log(places[0].photos[0].photo_reference)\n  // console.log(places.data.results[0].geometry.location)\n  //TODO: Add key to ENV file\n\n  const [open, setOpen] = useState(false);\n  const [selectedPlace, setSelectedPlace] = useState(places[0]);\n  const handleOpen = (place) => {\n    setSelectedPlace(place)\n    setOpen(true);\n  }\n  const handleClose = () => setOpen(false);\n  const style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n  };\n\n\n  return (\n    <div className={classes.container}>\n      <GoogleMapReact\n        bootstrapURLKeys={{ key: 'AIzaSyD2puGPtJBCXGtB1QgL7Fhh_VMALg_InmY' }}\n        defaultCenter={defaultProps.centre}\n        defaultZoom={defaultProps.zoom}\n        center={defaultProps.centre}\n        onChange={(event) => {\n          // console.log(event.center);\n          setCentre(event.center)\n        }}\n      >\n        {places?.map((place, i) =>\n          <div lat={place.geometry.location.lat} lng={place.geometry.location.lng}>\n\n          <IconButton style={{color: 'black', border: 'dashed'}} onClick={() => handleOpen(place)}>\n            <LocalBarIcon />\n          </IconButton>\n\n        </div>\n        )}\n<Modal\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"modal-modal-title\"\n            aria-describedby=\"modal-modal-description\"\n          >\n            <Box sx={style}>\n\n              <Card  sx={style} >\n                <CardMedia\n                  style={{ height: '60px'}}\n                  component=\"img\"\n                  height=\"140\"\n                  image={`https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photo_reference=${selectedPlace?.photos[0]?.photo_reference}&key=AIzaSyDSIQ1d7mi0UkmqcOVJICPOh43Oa-i1byc`}\n                />\n                <CardContent\n                  style={{ height: '20px'}}\n                >\n                  <Typography variant=\"subtitle2\" component=\"div\">\n                    {selectedPlace?.name}\n                  </Typography>\n                </CardContent>\n\n              </Card>\n            </Box>\n          </Modal>\n      </GoogleMapReact>\n\n    </div>\n\n  )\n}\n\nexport default Map;\n\n\n\n{/*\n        {places?.map((place, i) =>\n            <Card lat={place.geometry.location.lat} lng={place.geometry.location.lng} style={{display: 'inline-block', width:'100px'}} sx={{ maxWidth: 40 }}>\n            <CardMedia\n              style={{ height: '60px'}}\n              component=\"img\"\n              height=\"140\"\n              image={`https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photo_reference=${place.photos[0].photo_reference}&key=AIzaSyDSIQ1d7mi0UkmqcOVJICPOh43Oa-i1byc`}\n            />\n            <CardContent\n              style={{ height: '20px'}}\n            >\n              <Typography variant=\"subtitle2\" component=\"div\">\n                {place.name}\n              </Typography>\n            </CardContent>\n\n          </Card>\n        )} */}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/dbolton/Codeworks/solo-project/meet-inn/client/src/components/Map/Map.jsx\",\n  _s = $RefreshSig$();\nimport GoogleMapReact from 'google-map-react';\nimport { Typography, Paper } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport useStyles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Map(_ref) {\n  _s();\n  let {\n    centre,\n    setCentre,\n    places\n  } = _ref;\n  const classes = useStyles();\n  const defaultProps = {\n    centre: {\n      lat: 51.575802328718375,\n      lng: 0.18283138525078574\n    },\n    zoom: 12\n  };\n  // console.log(places[0].photos[0].photo_reference)\n  // console.log(places.data.results[0].geometry.location)\n  //TODO: Add key to ENV file\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: 'AIzaSyD2puGPtJBCXGtB1QgL7Fhh_VMALg_InmY'\n      },\n      defaultCenter: defaultProps.centre,\n      defaultZoom: defaultProps.zoom,\n      center: defaultProps.centre,\n      onChange: event => {\n        // console.log(event);\n      },\n      children: places === null || places === void 0 ? void 0 : places.map((place, i) => /*#__PURE__*/_jsxDEV(Card, {\n        lat: place.geometry.location.lat,\n        lng: place.geometry.location.lng,\n        style: {\n          display: 'inline-block',\n          width: '100px'\n        },\n        sx: {\n          maxWidth: 40\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          style: {\n            height: '60px'\n          },\n          component: \"img\",\n          height: \"140\",\n          image: `https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photo_reference=${place.photos[0].photo_reference}&key=AIzaSyDSIQ1d7mi0UkmqcOVJICPOh43Oa-i1byc`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          style: {\n            height: '20px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            component: \"div\",\n            children: place.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this)\n\n  // <h1 className={classes.container}>\n  //   Hello, Map!\n  // </h1>\n  ;\n}\n_s(Map, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["GoogleMapReact","Typography","Paper","Card","CardHeader","CardContent","CardMedia","useStyles","Map","centre","setCentre","places","classes","defaultProps","lat","lng","zoom","container","key","event","map","place","i","geometry","location","display","width","maxWidth","height","photos","photo_reference","name"],"sources":["/home/dbolton/Codeworks/solo-project/meet-inn/client/src/components/Map/Map.jsx"],"sourcesContent":["import GoogleMapReact from 'google-map-react';\nimport { Typography, Paper } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\n\n\nimport useStyles from './styles'\n\n\nfunction Map({ centre, setCentre, places }) {\n  const classes = useStyles();\n\n  const defaultProps = {\n    centre: {\n      lat: 51.575802328718375,\n      lng: 0.18283138525078574\n    },\n    zoom: 12\n  }\n  // console.log(places[0].photos[0].photo_reference)\n  // console.log(places.data.results[0].geometry.location)\n  //TODO: Add key to ENV file\n\n  return (\n    <div className={classes.container}>\n      <GoogleMapReact\n        bootstrapURLKeys={{ key: 'AIzaSyD2puGPtJBCXGtB1QgL7Fhh_VMALg_InmY' }}\n        defaultCenter={defaultProps.centre}\n        defaultZoom={defaultProps.zoom}\n        center={defaultProps.centre}\n        onChange={(event) => {\n          // console.log(event);\n\n        }}\n      >\n        {/* {places?.map((place, i) =>\n          <Typography lat={place.geometry.location.lat} lng={place.geometry.location.lng}>\n            {place.name}\n          </Typography>\n        )} */}\n\n        {places?.map((place, i) =>\n            <Card lat={place.geometry.location.lat} lng={place.geometry.location.lng} style={{display: 'inline-block', width:'100px'}} sx={{ maxWidth: 40 }}>\n            <CardMedia\n              style={{ height: '60px'}}\n              component=\"img\"\n              height=\"140\"\n              image={`https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photo_reference=${place.photos[0].photo_reference}&key=AIzaSyDSIQ1d7mi0UkmqcOVJICPOh43Oa-i1byc`}\n            />\n            <CardContent\n              style={{ height: '20px'}}\n            >\n              <Typography variant=\"subtitle2\" component=\"div\">\n                {place.name}\n              </Typography>\n            </CardContent>\n\n          </Card>\n        )}\n\n      </GoogleMapReact>\n\n    </div>\n\n\n\n      // <h1 className={classes.container}>\n      //   Hello, Map!\n      // </h1>\n  )\n}\n\nexport default Map;"],"mappings":";;AAAA,OAAOA,cAAc,MAAM,kBAAkB;AAC7C,SAASC,UAAU,EAAEC,KAAK,QAAQ,mBAAmB;AACrD,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,UAAU,MAAM,8BAA8B;AACrD,OAAOC,WAAW,MAAM,+BAA+B;AACvD,OAAOC,SAAS,MAAM,6BAA6B;AAGnD,OAAOC,SAAS,MAAM,UAAU;AAAA;AAGhC,SAASC,GAAG,OAAgC;EAAA;EAAA,IAA/B;IAAEC,MAAM;IAAEC,SAAS;IAAEC;EAAO,CAAC;EACxC,MAAMC,OAAO,GAAGL,SAAS,EAAE;EAE3B,MAAMM,YAAY,GAAG;IACnBJ,MAAM,EAAE;MACNK,GAAG,EAAE,kBAAkB;MACvBC,GAAG,EAAE;IACP,CAAC;IACDC,IAAI,EAAE;EACR,CAAC;EACD;EACA;EACA;;EAEA,oBACE;IAAK,SAAS,EAAEJ,OAAO,CAACK,SAAU;IAAA,uBAChC,QAAC,cAAc;MACb,gBAAgB,EAAE;QAAEC,GAAG,EAAE;MAA0C,CAAE;MACrE,aAAa,EAAEL,YAAY,CAACJ,MAAO;MACnC,WAAW,EAAEI,YAAY,CAACG,IAAK;MAC/B,MAAM,EAAEH,YAAY,CAACJ,MAAO;MAC5B,QAAQ,EAAGU,KAAK,IAAK;QACnB;MAAA,CAEA;MAAA,UAQDR,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAES,GAAG,CAAC,CAACC,KAAK,EAAEC,CAAC,kBAClB,QAAC,IAAI;QAAC,GAAG,EAAED,KAAK,CAACE,QAAQ,CAACC,QAAQ,CAACV,GAAI;QAAC,GAAG,EAAEO,KAAK,CAACE,QAAQ,CAACC,QAAQ,CAACT,GAAI;QAAC,KAAK,EAAE;UAACU,OAAO,EAAE,cAAc;UAAEC,KAAK,EAAC;QAAO,CAAE;QAAC,EAAE,EAAE;UAAEC,QAAQ,EAAE;QAAG,CAAE;QAAA,wBAChJ,QAAC,SAAS;UACR,KAAK,EAAE;YAAEC,MAAM,EAAE;UAAM,CAAE;UACzB,SAAS,EAAC,KAAK;UACf,MAAM,EAAC,KAAK;UACZ,KAAK,EAAG,iFAAgFP,KAAK,CAACQ,MAAM,CAAC,CAAC,CAAC,CAACC,eAAgB;QAA8C;UAAA;UAAA;UAAA;QAAA,QACtK,eACF,QAAC,WAAW;UACV,KAAK,EAAE;YAAEF,MAAM,EAAE;UAAM,CAAE;UAAA,uBAEzB,QAAC,UAAU;YAAC,OAAO,EAAC,WAAW;YAAC,SAAS,EAAC,KAAK;YAAA,UAC5CP,KAAK,CAACU;UAAI;YAAA;YAAA;YAAA;UAAA;QACA;UAAA;UAAA;UAAA;QAAA,QACD;MAAA;QAAA;QAAA;QAAA;MAAA,QAET;IACR;MAAA;MAAA;MAAA;IAAA;EAEc;IAAA;IAAA;IAAA;EAAA;;EAMjB;EACA;EACA;EAAA;AAEN;AAAC,GA7DQvB,GAAG;EAAA,QACMD,SAAS;AAAA;AAAA,KADlBC,GAAG;AA+DZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
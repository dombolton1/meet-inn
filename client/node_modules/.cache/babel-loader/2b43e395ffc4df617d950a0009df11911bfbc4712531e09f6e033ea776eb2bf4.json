{"ast":null,"code":"var _jsxFileName = \"/home/dbolton/Codeworks/solo-project/meet-inn/client/src/components/Places/Places.jsx\",\n  _s = $RefreshSig$();\n// import { Grid } from '@material-ui/core'\n\n// import useStyles from './styles'\n\n// function Places() {\n//   const classes = useStyles();\n\n//   const mockData = [1,2,3,4,5,6]\n\n//   return (\n//     <div className={classes.container}>\n//       <Grid container>\n//         {mockData?.map((number) => (\n//           <Grid item xs={12}>\n//             {number}\n//           </Grid>\n//         ))}\n//       </Grid>\n//     </div>\n//   )\n// }\n\n// export default Places;\n\nimport { Grid, Typography, IconButton, Paper } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n// import ListItemButton from '@material-ui/core/ListItemButton';\nimport Divider from '@material-ui/core/Divider';\nimport AddIcon from '@material-ui/icons/Add';\nimport LocalBarIcon from '@material-ui/icons/LocalBar';\nimport useStyles from './styles';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Places(_ref) {\n  _s();\n  let {\n    places,\n    list,\n    addToList,\n    isOnList\n  } = _ref;\n  const classes = useStyles();\n  return (\n    /*#__PURE__*/\n    // <>\n    //   {places?.map((place, i) =>\n    //     <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper', }}>\n    //       <ListItem alignItems=\"flex-start\">\n    //         <ListItemText\n    //           primary={place.name}\n    //           secondary={\n    //             <>\n    //               <Typography\n    //                 sx={{ display: 'inline' }}\n    //                 component=\"span\"\n    //                 variant=\"body2\"\n    //                 color=\"text.primary\"\n    //               >\n    //                 Ali Connors\n    //               </Typography>\n    //               {\" — I'll be in your neighborhood doing errands this…\"}\n    //             </>\n    //           }\n    //         />\n    //       </ListItem>\n    //       <Divider variant=\"inset\" component=\"li\" />\n    //     </List>\n    //   )}\n    // </>\n    _jsxDEV(Paper, {\n      style: {\n        maxHeight: '70vh',\n        overflow: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(List, {\n        sx: {\n          width: '100%',\n          maxWidth: 360,\n          bgcolor: 'background.paper'\n        },\n        children: places === null || places === void 0 ? void 0 : places.map((place, i) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            alignItems: \"flex-start\",\n            children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: place.name,\n              secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  sx: {\n                    display: 'inline'\n                  },\n                  component: \"span\",\n                  variant: \"body2\",\n                  color: \"text.primary\",\n                  children: \"Yo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 19\n                }, this), \" — I'll be in your neighborhood doing errands this…\"]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 13\n            }, this), (() => isOnList(place)) ? /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => {\n                // list.push({name: place.name});\n                addToList({\n                  name: place.name,\n                  photo: place.photos[0].photo_reference\n                });\n                console.log(place);\n              },\n              children: [/*#__PURE__*/_jsxDEV(AddIcon, {\n                style: {\n                  color: '#99b27f'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(LocalBarIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 14\n            }, this) : /*#__PURE__*/_jsxDEV(LocalBarIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            variant: \"inset\",\n            component: \"li\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(Places, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n_c = Places;\nexport default Places;\nvar _c;\n$RefreshReg$(_c, \"Places\");","map":{"version":3,"names":["Grid","Typography","IconButton","Paper","List","ListItem","ListItemText","Divider","AddIcon","LocalBarIcon","useStyles","Places","places","list","addToList","isOnList","classes","maxHeight","overflow","width","maxWidth","bgcolor","map","place","i","name","display","photo","photos","photo_reference","console","log","color"],"sources":["/home/dbolton/Codeworks/solo-project/meet-inn/client/src/components/Places/Places.jsx"],"sourcesContent":["// import { Grid } from '@material-ui/core'\n\n// import useStyles from './styles'\n\n\n// function Places() {\n//   const classes = useStyles();\n\n//   const mockData = [1,2,3,4,5,6]\n\n//   return (\n//     <div className={classes.container}>\n//       <Grid container>\n//         {mockData?.map((number) => (\n//           <Grid item xs={12}>\n//             {number}\n//           </Grid>\n//         ))}\n//       </Grid>\n//     </div>\n//   )\n// }\n\n// export default Places;\n\nimport { Grid, Typography, IconButton, Paper } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n// import ListItemButton from '@material-ui/core/ListItemButton';\nimport Divider from '@material-ui/core/Divider';\nimport AddIcon from '@material-ui/icons/Add';\nimport LocalBarIcon from '@material-ui/icons/LocalBar';\n\n\nimport useStyles from './styles';\n\n\nfunction Places({ places, list, addToList, isOnList }) {\n  const classes = useStyles();\n\n  return (\n    // <>\n    //   {places?.map((place, i) =>\n    //     <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper', }}>\n    //       <ListItem alignItems=\"flex-start\">\n    //         <ListItemText\n    //           primary={place.name}\n    //           secondary={\n    //             <>\n    //               <Typography\n    //                 sx={{ display: 'inline' }}\n    //                 component=\"span\"\n    //                 variant=\"body2\"\n    //                 color=\"text.primary\"\n    //               >\n    //                 Ali Connors\n    //               </Typography>\n    //               {\" — I'll be in your neighborhood doing errands this…\"}\n    //             </>\n    //           }\n    //         />\n    //       </ListItem>\n    //       <Divider variant=\"inset\" component=\"li\" />\n    //     </List>\n    //   )}\n    // </>\n    <Paper style={{ maxHeight: '70vh', overflow: 'auto'}}>\n\n      <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\n        {places?.map((place, i) =>\n          <>\n          <ListItem alignItems=\"flex-start\">\n            <ListItemText\n              primary={place.name}\n              secondary={\n                <>\n                  <Typography\n                    sx={{ display: 'inline' }}\n                    component=\"span\"\n                    variant=\"body2\"\n                    color=\"text.primary\"\n                  >\n                    Yo\n                  </Typography>\n                  {\" — I'll be in your neighborhood doing errands this…\"}\n                </>\n              }\n            />\n            {(() => isOnList(place)) ?\n\n            (<IconButton\n              onClick={() => {\n                // list.push({name: place.name});\n                addToList({name: place.name, photo: place.photos[0].photo_reference})\n                console.log(place)\n              }}\n            >\n              <AddIcon style={{color: '#99b27f'}}/>\n              <LocalBarIcon />\n            </IconButton>) :\n            <LocalBarIcon />\n            }\n          </ListItem>\n          <Divider variant=\"inset\" component=\"li\" />\n          </>\n        )}\n      </List>\n    </Paper>\n  )\n}\n\nexport default Places;\n"],"mappings":";;AAAA;;AAEA;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAASA,IAAI,EAAEC,UAAU,EAAEC,UAAU,EAAEC,KAAK,QAAQ,mBAAmB;AACvE,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,YAAY,MAAM,gCAAgC;AACzD;AACA,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,OAAOC,OAAO,MAAM,wBAAwB;AAC5C,OAAOC,YAAY,MAAM,6BAA6B;AAGtD,OAAOC,SAAS,MAAM,UAAU;AAAC;AAAA;AAGjC,SAASC,MAAM,OAAwC;EAAA;EAAA,IAAvC;IAAEC,MAAM;IAAEC,IAAI;IAAEC,SAAS;IAAEC;EAAS,CAAC;EACnD,MAAMC,OAAO,GAAGN,SAAS,EAAE;EAE3B;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAC,KAAK;MAAC,KAAK,EAAE;QAAEO,SAAS,EAAE,MAAM;QAAEC,QAAQ,EAAE;MAAM,CAAE;MAAA,uBAEnD,QAAC,IAAI;QAAC,EAAE,EAAE;UAAEC,KAAK,EAAE,MAAM;UAAEC,QAAQ,EAAE,GAAG;UAAEC,OAAO,EAAE;QAAmB,CAAE;QAAA,UACrET,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEU,GAAG,CAAC,CAACC,KAAK,EAAEC,CAAC,kBACpB;UAAA,wBACA,QAAC,QAAQ;YAAC,UAAU,EAAC,YAAY;YAAA,wBAC/B,QAAC,YAAY;cACX,OAAO,EAAED,KAAK,CAACE,IAAK;cACpB,SAAS,eACP;gBAAA,wBACE,QAAC,UAAU;kBACT,EAAE,EAAE;oBAAEC,OAAO,EAAE;kBAAS,CAAE;kBAC1B,SAAS,EAAC,MAAM;kBAChB,OAAO,EAAC,OAAO;kBACf,KAAK,EAAC,cAAc;kBAAA,UACrB;gBAED;kBAAA;kBAAA;kBAAA;gBAAA,QAAa,EACZ,qDAAqD;cAAA;YAEzD;cAAA;cAAA;cAAA;YAAA,QACD,EACD,CAAC,MAAMX,QAAQ,CAACQ,KAAK,CAAC,iBAEtB,QAAC,UAAU;cACV,OAAO,EAAE,MAAM;gBACb;gBACAT,SAAS,CAAC;kBAACW,IAAI,EAAEF,KAAK,CAACE,IAAI;kBAAEE,KAAK,EAAEJ,KAAK,CAACK,MAAM,CAAC,CAAC,CAAC,CAACC;gBAAe,CAAC,CAAC;gBACrEC,OAAO,CAACC,GAAG,CAACR,KAAK,CAAC;cACpB,CAAE;cAAA,wBAEF,QAAC,OAAO;gBAAC,KAAK,EAAE;kBAACS,KAAK,EAAE;gBAAS;cAAE;gBAAA;gBAAA;gBAAA;cAAA,QAAE,eACrC,QAAC,YAAY;gBAAA;gBAAA;gBAAA;cAAA,QAAG;YAAA;cAAA;cAAA;cAAA;YAAA,QACL,gBACb,QAAC,YAAY;cAAA;cAAA;cAAA;YAAA,QAAG;UAAA;YAAA;YAAA;YAAA;UAAA,QAEP,eACX,QAAC,OAAO;YAAC,OAAO,EAAC,OAAO;YAAC,SAAS,EAAC;UAAI;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA,gBACvC;MACJ;QAAA;QAAA;QAAA;MAAA;IACI;MAAA;MAAA;MAAA;IAAA;EACD;AAEZ;AAAC,GAxEQrB,MAAM;EAAA,QACGD,SAAS;AAAA;AAAA,KADlBC,MAAM;AA0Ef,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
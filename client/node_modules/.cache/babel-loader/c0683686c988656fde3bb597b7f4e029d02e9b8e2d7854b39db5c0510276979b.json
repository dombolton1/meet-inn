{"ast":null,"code":"var _jsxFileName = \"/home/dbolton/Codeworks/solo-project/meet-inn/client/src/components/Places/Places.jsx\",\n  _s = $RefreshSig$();\n// import { Grid } from '@material-ui/core'\n\n// import useStyles from './styles'\n\n// function Places() {\n//   const classes = useStyles();\n\n//   const mockData = [1,2,3,4,5,6]\n\n//   return (\n//     <div className={classes.container}>\n//       <Grid container>\n//         {mockData?.map((number) => (\n//           <Grid item xs={12}>\n//             {number}\n//           </Grid>\n//         ))}\n//       </Grid>\n//     </div>\n//   )\n// }\n\n// export default Places;\n\nimport { Grid, Typography } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport useStyles from './styles';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Places(_ref) {\n  _s();\n  let {\n    places\n  } = _ref;\n  const classes = useStyles();\n  const mockData = [1, 2, 3, 4, 5, 6];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: places === null || places === void 0 ? void 0 : places.map((place, i) => /*#__PURE__*/_jsxDEV(List, {\n      sx: {\n        width: '100%',\n        maxWidth: 360,\n        bgcolor: 'background.paper',\n        overflowY: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        alignItems: \"flex-start\",\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: place.name,\n          secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                display: 'inline'\n              },\n              component: \"span\",\n              variant: \"body2\",\n              color: \"text.primary\",\n              children: \"Ali Connors\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this), \" — I'll be in your neighborhood doing errands this…\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        variant: \"inset\",\n        component: \"li\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n_s(Places, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n_c = Places;\nexport default Places;\nvar _c;\n$RefreshReg$(_c, \"Places\");","map":{"version":3,"names":["Grid","Typography","List","ListItem","ListItemText","Divider","useStyles","Places","places","classes","mockData","map","place","i","width","maxWidth","bgcolor","overflowY","name","display"],"sources":["/home/dbolton/Codeworks/solo-project/meet-inn/client/src/components/Places/Places.jsx"],"sourcesContent":["// import { Grid } from '@material-ui/core'\n\n// import useStyles from './styles'\n\n\n// function Places() {\n//   const classes = useStyles();\n\n//   const mockData = [1,2,3,4,5,6]\n\n//   return (\n//     <div className={classes.container}>\n//       <Grid container>\n//         {mockData?.map((number) => (\n//           <Grid item xs={12}>\n//             {number}\n//           </Grid>\n//         ))}\n//       </Grid>\n//     </div>\n//   )\n// }\n\n// export default Places;\n\nimport { Grid, Typography } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\n\nimport useStyles from './styles';\n\n\nfunction Places({ places }) {\n  const classes = useStyles();\n\n  const mockData = [1,2,3,4,5,6]\n\n  return (\n    <>\n      {places?.map((place, i) =>\n        <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper', overflowY: 'auto' }}>\n          <ListItem alignItems=\"flex-start\">\n            <ListItemText\n              primary={place.name}\n              secondary={\n                <>\n                  <Typography\n                    sx={{ display: 'inline' }}\n                    component=\"span\"\n                    variant=\"body2\"\n                    color=\"text.primary\"\n                  >\n                    Ali Connors\n                  </Typography>\n                  {\" — I'll be in your neighborhood doing errands this…\"}\n                </>\n              }\n            />\n          </ListItem>\n          <Divider variant=\"inset\" component=\"li\" />\n        </List>\n      )}\n    </>\n  )\n}\n\nexport default Places;"],"mappings":";;AAAA;;AAEA;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAASA,IAAI,EAAEC,UAAU,QAAQ,mBAAmB;AACpD,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,YAAY,MAAM,gCAAgC;AACzD,OAAOC,OAAO,MAAM,2BAA2B;AAE/C,OAAOC,SAAS,MAAM,UAAU;AAAC;AAAA;AAGjC,SAASC,MAAM,OAAa;EAAA;EAAA,IAAZ;IAAEC;EAAO,CAAC;EACxB,MAAMC,OAAO,GAAGH,SAAS,EAAE;EAE3B,MAAMI,QAAQ,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EAE9B,oBACE;IAAA,UACGF,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEG,GAAG,CAAC,CAACC,KAAK,EAAEC,CAAC,kBACpB,QAAC,IAAI;MAAC,EAAE,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAEC,QAAQ,EAAE,GAAG;QAAEC,OAAO,EAAE,kBAAkB;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAA,wBACzF,QAAC,QAAQ;QAAC,UAAU,EAAC,YAAY;QAAA,uBAC/B,QAAC,YAAY;UACX,OAAO,EAAEL,KAAK,CAACM,IAAK;UACpB,SAAS,eACP;YAAA,wBACE,QAAC,UAAU;cACT,EAAE,EAAE;gBAAEC,OAAO,EAAE;cAAS,CAAE;cAC1B,SAAS,EAAC,MAAM;cAChB,OAAO,EAAC,OAAO;cACf,KAAK,EAAC,cAAc;cAAA,UACrB;YAED;cAAA;cAAA;cAAA;YAAA,QAAa,EACZ,qDAAqD;UAAA;QAEzD;UAAA;UAAA;UAAA;QAAA;MACD;QAAA;QAAA;QAAA;MAAA,QACO,eACX,QAAC,OAAO;QAAC,OAAO,EAAC,OAAO;QAAC,SAAS,EAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACrC;EACR,iBACA;AAEP;AAAC,GAhCQZ,MAAM;EAAA,QACGD,SAAS;AAAA;AAAA,KADlBC,MAAM;AAkCf,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}